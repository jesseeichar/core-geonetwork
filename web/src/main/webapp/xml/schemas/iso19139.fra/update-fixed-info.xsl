<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet   xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
						xmlns:gml="http://www.opengis.net/gml"
						xmlns:srv="http://www.isotc211.org/2005/srv"
						xmlns:gmx="http://www.isotc211.org/2005/gmx"						
						xmlns:gco="http://www.isotc211.org/2005/gco"
						xmlns:gmd="http://www.isotc211.org/2005/gmd"
                        exclude-result-prefixes="gmd srv">

	<!-- ================================================================= -->
	
	<xsl:template match="/root">
		 <xsl:apply-templates select="gmd:MD_Metadata"/>
	</xsl:template>

	<!-- ================================================================= 
        Add new fileIdentifier if not exist in input doc
        Add new parentIdentifier if a parentUuid is provided
        -->
	
	<xsl:template match="gmd:MD_Metadata">
		 <xsl:copy>
		 		<xsl:apply-templates select="@*"/>
		 		<xsl:choose>
                    <xsl:when test="not(gmd:fileIdentifier)">
    		 			<gmd:fileIdentifier>
    						<gco:CharacterString><xsl:value-of select="/root/env/uuid"/></gco:CharacterString>
    					</gmd:fileIdentifier>
                    </xsl:when>
                    <xsl:otherwise>
                        <gmd:fileIdentifier>
                            <gco:CharacterString><xsl:value-of select="/root/env/uuid"/></gco:CharacterString>
                        </gmd:fileIdentifier>
                    </xsl:otherwise>
			    </xsl:choose>
          
                <xsl:copy-of select="gmd:language|gmd:characterSet"/>
          
                <xsl:choose>
                    <xsl:when test="/root/env/parentUuid!=''">
                        <gmd:parentIdentifier>
                            <gco:CharacterString><xsl:value-of select="/root/env/parentUuid"/></gco:CharacterString>
                        </gmd:parentIdentifier>
                    </xsl:when>
                    <xsl:when test="gmd:parentIdentifier">
                        <xsl:copy-of select="gmd:parentIdentifier"/>
                    </xsl:when>
                </xsl:choose>
                
			    <xsl:apply-templates select="node()"/>
		 </xsl:copy>
	</xsl:template>

    <!-- ================================================================= 
        Do not process MD_Metadata header generated by previous template    
    -->
  
    <xsl:template match="gmd:MD_Metadata/gmd:fileIdentifier|gmd:MD_Metadata/gmd:language|gmd:MD_Metadata/gmd:characterSet|gmd:MD_Metadata/gmd:parentIdentifier" priority="10"/>
	
	<!-- ================================================================= -->
	
	<xsl:template match="gmd:dateStamp">
		<xsl:copy>
			<gco:DateTime><xsl:value-of select="/root/env/changeDate"/></gco:DateTime>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	
	<xsl:template match="gmd:metadataStandardName" priority="10">
		<xsl:copy>
			<gco:CharacterString>ISO 19115:2003/19139</gco:CharacterString>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	
	<xsl:template match="gmd:metadataStandardVersion" priority="10">
		<xsl:copy>
			<gco:CharacterString>1.0</gco:CharacterString>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	
	<xsl:template match="@gml:id">
		<xsl:choose>
			<xsl:when test="normalize-space(.)=''">
				<xsl:attribute name="gml:id">
					<xsl:value-of select="generate-id(.)"/>
				</xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy-of select="."/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- ================================================================= -->
	<!-- Fix srsName attribute and generate epsg:4326 entry by default -->

	<xsl:template match="@srsName">
		<xsl:choose>
			<xsl:when test="normalize-space(.)=''">
				<xsl:attribute name="srsName">
					<xsl:text>urn:x-ogc:def:crs:EPSG:6.6:4326</xsl:text>
				</xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy-of select="."/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	
	<!-- ================================================================= -->
	
	<xsl:template match="*[gco:CharacterString]">
		<xsl:copy>
			<xsl:copy-of select="@*[not(name()='gco:nilReason')]"/>
			<xsl:if test="normalize-space(gco:CharacterString)=''">
				<xsl:attribute name="gco:nilReason">
					<xsl:value-of select="'missing'"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates select="gco:CharacterString"/>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	<!-- codelists: set @codeList path -->
	<!-- ================================================================= -->
	
	<xsl:template match="gmd:*[@codeListValue]">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>
			<xsl:attribute name="codeList">
				<xsl:value-of select="concat('http://www.isotc211.org/2005/resources/codeList.xml#',local-name(.))"/>
			</xsl:attribute>
		</xsl:copy>
	</xsl:template>

	<!-- can't find the location of the 19119 codelists - so we make one up -->

	<xsl:template match="srv:*[@codeListValue]">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>
			<xsl:attribute name="codeList">
				<xsl:value-of select="concat('http://www.isotc211.org/2005/iso19119/resources/Codelist/gmxCodelists.xml#',local-name(.))"/>
			</xsl:attribute>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	<!-- online resources: download -->
	<!-- ================================================================= -->

<!-- 	<xsl:template match="gmd:linkage[starts-with(following-sibling::gmd:protocol/gco:CharacterString,'WWW:DOWNLOAD-') and contains(following-sibling::gmd:protocol/gco:CharacterString,'http-     
-download') and following-sibling::gmd:name]">
		<gmd:linkage>
			<gmd:URL>
				<xsl:value-of select="concat(/root/env/siteURL,'/resources.get?id=',/root/env/id,'&amp;fname=',following-sibling::gmd:name/gco:CharacterString,'&amp;access=private')"/>
			</gmd:URL>
		</gmd:linkage>
	</xsl:template>
 -->
	<!-- ================================================================= -->
	
	<xsl:template match="@*|node()">
		 <xsl:copy>
			  <xsl:apply-templates select="@*|node()"/>
		 </xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->
	<!--
	<xsl:template match="srv:SV_ServiceIdentification" priority="2">
		<xsl:copy>
			<xsl:copy-of select="gmd:*"/>
			<xsl:copy-of select="srv:serviceType"/>
			<xsl:copy-of select="srv:serviceTypeVersion"/>
			<xsl:copy-of select="srv:accessProperties"/>
			<xsl:copy-of select="srv:restrictions"/>
			<xsl:copy-of select="srv:keywords"/>
			<xsl:copy-of select="srv:extent"/>
			<xsl:copy-of select="srv:coupledResource"/>
			<xsl:copy-of select="srv:couplingType"/>
			<xsl:copy-of select="srv:containsOperations"/>
			<xsl:copy-of select="srv:operatesOn"/>
			  Create operatesOn elements for each coupledResource.
				Coupled resource is the main element to use in the editor,
				in order to add new related metadata to a service.
				
			<xsl:for-each select="srv:coupledResource">
				<xsl:variable name="uuid" select="srv:SV_CoupledResource/srv:identifier/gco:CharacterString"/>
				<srv:operatesOn uuidref="{$uuid}"/>
				</xsl:for-each> 
		</xsl:copy>
		</xsl:template> -->

	<!-- Replace gmx:Anchor element by a simple gco:CharacterString.
		gmx:Anchor is usually used for linking element using xlink.
	-->
	<xsl:template match="gmx:Anchor">
		<gco:CharacterString>
			<xsl:value-of select="."/>
		</gco:CharacterString>
	</xsl:template>
</xsl:stylesheet>
